security:
    encoders:
      App\Entity\User :
        algorithm : plaintext
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
      ROLE_LICENCIE:
      ROLE_ADMIN: ROLE_LICENCIE
      ROLE_SUPERADMIN: ROLE_ADMIN

    providers:
      in_tcm:
          entity:
            class: App\Entity\User
            property: login

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            security: true
            anonymous: ~
            access_denied_url: /denied
            form_login:
                login_path: security_login
                check_path:  security_login
                provider: in_tcm
            logout:
                path: security_logout
                target: security_login



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path : ^/connexion , roles : IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reservation, roles: ROLE_LICENCIE }
        - { path: ^/utilisateur, roles: ROLE_SUPERADMIN }
        - { path: ^/modifyUser, roles: ROLE_SUPERADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
